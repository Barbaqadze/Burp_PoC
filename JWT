https://portswigger.net/web-security/jwt




Accepting arbitrary signatures
	JWT authentication bypass via unverified signature
		Webstie doesnot verify JWT signature so we can chage payload and validate it. so login as wiener and send request into repeator which contains jwt token. change the value of the sub claim from wiener to administrator, then click Apply changes and send request to access admin page.



Accepting tokens with no signature
	JWT authentication bypass via flawed signature verification
		Website support JWT none algorithm so we can bypass signature. login as wiener and send request to repeator. change JWT payload value from wiener to administrator and Header to none algorithm and send request to access admin page.




Brute-forcing secret keys using hashcat
	JWT authentication bypass via weak signing key
		Website have weak secret key. firsly brute force JWT token with hashcat - " hashcat -a 0 -m 16500 <YOUR-JWT> /path/to/jwt.secrets.list ". then use weak secret key to generate new sign key. go to JWT editor keys and create New Symmetric Key and change "k" property with our base64 encoded cracked key. then go to repeator to use signed key for modified "sub" property which changed from wiener to administrator. send request to access admin page.




Injecting self-signed JWTs via the jwk parameter
	JWT authentication bypass via jwk header injection
		Website JWT token supported self-signed JWK header. So generate our New RSA Key from JWT Editor Keys and then embedded it to our JWT token from Attack>Embedded JWK and send request with changed "sub" property to access admin page.


-------------------------------------------------------------------------------


Injecting self-signed JWTs via the jku parameter
	JWT authentication bypass via jku header injection
		Website is vulnerable by poison jku parameter. On the JWT editor keys generate New RSA Key. then go to exploit server and make "keys" object and insert generated RSA public key as JWK. then modify JWT token into JSON Web token tab. In the header of the JWT, replace the current value of the kid parameter with the kid of the JWK that you uploaded to the exploit server. Add a new jku parameter to the header of the JWT. Set its value to the URL of your JWK Set on the exploit server. In the payload, change the value of the sub claim to administrator. At the bottom of the tab, click Sign, then select the RSA key that we generated and send request to access admin page.


------------------------------------------------------------------------------a


Injecting self-signed JWTs via the kid parameter
	JWT authentication bypass via kid header path traversal
		Website is vulnerable by "kid" parameter. in the JWT Editor Keys generate new RSA key and change "k" parameter with "AA==" which is null byte into base64. then go to JSON Web Token tab and change "kid" parameter to "../../../../../../../dev/null". also  change the value of the sub claim to administrator.  and then Sign our generated Symetric key and send request to access admin account.


------------------------------------------------------------------------------


Performing an algorithm confusion attack
	JWT authentication bypass via algorithm confusion
		Step 1 - Obtain the server's public key
		Step 2 - Convert the public key to a suitable format
		Step 3 - Modify your JWT
		Step 4 - Sign the JWT using the public key


------------------------------------------------------------------------------



Deriving public keys from existing tokens
	JWT authentication bypass via algorithm confusion with no exposed key
		Part 1 - Obtain two JWTs generated by the server
		Part 2 - Brute-force the server's public key
		Part 3 - Generate a malicious signing key
		Part 4 - Modify and sign the token


-------------------------------------------------------------------------------

